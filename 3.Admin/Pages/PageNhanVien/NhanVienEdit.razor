@page "/nhanvienedit/{IdNV}"
@using _1.Data.Model;
@using _2.API.ViewModels.NhanVien;
@using _3.Admin.IServices;
<h3>NhanVienEdit</h3>

<EditForm Model="update" OnValidSubmit="UpdateNV" class="card card-body bg-light">
                <div class="text-danger"><DataAnnotationsValidator /></div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-12">                                                       
                            <div class="form-group pt-2 col-md-12">
                                <label for="name" class="col-md-6 col-form-label">Họ tên</label>
                                <div class="col-md-12">
                                    <InputText id="name" class="form-control" @bind-Value="update.Ten" />
                                    <div class="text-danger"><ValidationMessage For="@(() => update.Ten)"></ValidationMessage></div>
                                </div>
                            </div>
                            <div class="form-group pt-2 col-md-12">
                                <label for="name" class="col-md-6 col-form-label">Ngày sinh</label>
                                <div class="col-md-12">
                                    <InputDate id="name" class="form-control" @bind-Value="update.NgaySinh" />
                                    <div class="text-danger"><ValidationMessage For="@(() => update.NgaySinh)"></ValidationMessage></div>
                                </div>
                            </div>
                            <div class="form-group pt-2 col-md-12">
                                <label for="name" class="col-md-6 col-form-label">Địa chỉ</label>
                                <div class="col-md-12">
                                    <InputText id="name" class="form-control" @bind-Value="update.DiaChi" />
                                    <div class="text-danger"><ValidationMessage For="@(() => update.DiaChi)"></ValidationMessage></div>
                                </div>
                            </div>
                            <div class="form-group pt-2 col-md-12">
                                <label for="name" class="col-md-6 col-form-label">Giới tính</label>
                                <div class="col-md-12">
                                    <InputSelect class="form-control" @bind-Value="update.GioiTinh">
                                            <option value="true" >Nam</option>
                                            <option value="false">Nữ</option>
                                    </InputSelect>
                                </div>
                            </div>
                            <div class="form-group pt-2 col-md-12">
                                <label for="name" class="col-md-6 col-form-label">Trạng thái</label>
                                <div class="col-md-12">
                                    <InputSelect class="form-control" @bind-Value="update.TrangThai">
                                            <option value="true" >Hoạt động</option>
                                            <option value="false">Nghỉ việc</option>
                                    </InputSelect>
                                </div>
                            </div>
                            <div class="form-group pt-2 col-md-12">
                                <label for="name" class="col-md-6 col-form-label">Số điện thoại</label>
                                <div class="col-md-12">
                                    <InputText id="name" class="form-control" @bind-Value="update.Sdt" />
                                    <div class="text-danger"><ValidationMessage For="@(() => update.Sdt)"></ValidationMessage></div>
                                </div>
                            </div>
                            <div class="form-group pt-2 col-md-12">
                                <div class="row">
                                    <label for="AnhNhanVien" class="control-label">Ảnh</label>
                                </div>

                    @if (!string.IsNullOrEmpty(ImageUrl))
                    {
                                        <img src="@ImageUrl" alt="Ảnh Nhân viên" width="100" />
                    }
                    else
                    {
                            <img src="@("/AnhNhanVien/"+update.LinkAnh)" alt="Ảnh Nhân viên" width="100" />
                    }
                                <div class="custom-file mt-2">
                                <InputFile class="form-control form-control-sm form-control-file"
                                @bind-Value="update.LinkAnh" OnChange="HandleSelectedFile" />

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-4">
                        <div class="col-3">
                            <a href="/MainSanPham" class="btn btn-danger">Quay Lại</a>
                        </div>
                        <div class="col-6" style="text-align: center">
                            <button type="submit" class="btn btn-primary">Cập nhật</button>

                        </div>

                    </div>
                </div>
            </EditForm>

@code {
    [Inject] public NavigationManager NavigationManager { get; set; }
    [Inject] public IAllServices services { get; set; }
    [Inject] IWebHostEnvironment _webHost { get; set; }
    private string ImageUrl = null;
    private string errorEmail = null;
    [Parameter]
    public string IdNV { get; set; }
    private UpdateNhanVien update = new UpdateNhanVien();

    protected async override Task OnInitializedAsync()
    {
        var up = await services.GetById<NhanVien>("https://localhost:7111/api/NhanVien/GetById/", Guid.Parse(IdNV));

        update.Ten = up.Ten;
        update.DiaChi = up.DiaChi;
        update.Sdt = up.Sdt;
        update.GioiTinh = up.GioiTinh;
        update.NgaySinh = up.NgaySinh;
        update.TrangThai = up.TrangThai;
        update.LinkAnh = up.LinkAnh;

    }

    private async Task HandleSelectedFile(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            var buffer = new byte[file.Size];
            await file.OpenReadStream().ReadAsync(buffer);
            var imageUrl = $"data:image/png;base64,{Convert.ToBase64String(buffer)}";
            ImageUrl = imageUrl;

            string uploadFolder = Path.Combine(_webHost.WebRootPath, "AnhNhanVien");
            //string uploadFolderClient = Path.Combine("C:\\Users\\Admin\\OneDrive\\Documents\\Desktop\\Project\\Net106_Assignment\\4.Client\\wwwroot\\", "AnhNhanVienClient");

            string folder = Guid.NewGuid().ToString() + "_" + file.Name;

            update.LinkAnh = folder;

            string severfolder = Path.Combine(uploadFolder, folder);
            //string severfolderClient = Path.Combine(uploadFolderClient, folder);

            await file.OpenReadStream().CopyToAsync(new FileStream(severfolder, FileMode.Create));
            //await file.OpenReadStream().CopyToAsync(new FileStream(severfolderClient, FileMode.Create));
        }
    }

    private async Task UpdateNV(EditContext editContext)
    {
        var result = await services.Update<UpdateNhanVien>("https://localhost:7111/api/NhanVien/Update/", update, Guid.Parse(IdNV));
        if (result != null)
        {
            NavigationManager.NavigateTo("/nhanvienview");
        }

    }
}
